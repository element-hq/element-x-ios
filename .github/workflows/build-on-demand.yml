name: Build On Demand

on:
  workflow_dispatch:
    inputs:
      device:
        description: 'Target device'
        required: true
        default: 'iPhone 16'
        type: choice
        options:
        - iPhone 16
        - iPhone 16 Pro
        - iPhone SE (3rd generation)
        - iPad (10th generation)
      configuration:
        description: 'Build configuration'
        required: true
        default: 'Debug'
        type: choice
        options:
        - Debug
        - Release
      reason:
        description: 'Why are you building?'
        required: true
        type: string
        default: 'Testing new feature'
  
  # Chỉ build khi có thay đổi quan trọng
  push:
    branches: [ main, develop ]
    paths:
      - 'ElementX/Sources/**'
      - 'ElementX/Resources/**'
      - 'project.yml'
      - 'app.yml'
      - 'Package.swift'
      - 'Package.resolved'
      - 'fastlane/Fastfile'

jobs:
  build-on-demand:
    name: Build On Demand
    runs-on: macos-15
    
    concurrency:
      group: ${{ format('on-demand-{0}', github.ref) }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: nschloe/action-cached-lfs-checkout@f46300cd8952454b9f0a21a3d133d4bd5684cfc2 #v1.2.3

      - name: Cache everything
        uses: actions/cache@v4
        with:
          path: |
            vendor/bundle
            DerivedData
            ElementX.xcodeproj
          key: ${{ runner.os }}-full-cache-${{ hashFiles('**/Gemfile.lock', '**/Package.resolved', 'project.yml', 'app.yml') }}
          restore-keys: |
            ${{ runner.os }}-full-cache-

      - name: Setup environment
        run: source ci_scripts/ci_common.sh && setup_github_actions_environment

      - name: Install dependencies (if needed)
        if: steps.cache.outputs.cache-hit != 'true'
        run: bundle install

      - name: Generate Xcode project (if needed)
        if: steps.cache.outputs.cache-hit != 'true'
        run: bundle exec fastlane config_production

      - name: Setup Simulator
        run: |
          DEVICE="${{ github.event.inputs.device || 'iPhone 16' }}"
          echo "Setting up simulator for: $DEVICE"
          
          # Map device names to simulator identifiers
          case "$DEVICE" in
            "iPhone 16")
              DEVICE_ID="com.apple.CoreSimulator.SimDeviceType.iPhone-16"
              DEVICE_NAME="iPhone 16"
              ;;
            "iPhone 16 Pro")
              DEVICE_ID="com.apple.CoreSimulator.SimDeviceType.iPhone-16-Pro"
              DEVICE_NAME="iPhone 16 Pro"
              ;;
            "iPhone SE (3rd generation)")
              DEVICE_ID="com.apple.CoreSimulator.SimDeviceType.iPhone-SE-3rd-generation"
              DEVICE_NAME="iPhone SE (3rd generation)"
              ;;
            "iPad (10th generation)")
              DEVICE_ID="com.apple.CoreSimulator.SimDeviceType.iPad-10th-generation"
              DEVICE_NAME="iPad (10th generation)"
              ;;
            *)
              echo "Unknown device: $DEVICE"
              exit 1
              ;;
          esac
          
          # Create simulator if it doesn't exist
          if ! xcrun simctl list devices | grep -q "$DEVICE_NAME"; then
            echo "Creating $DEVICE_NAME simulator..."
            xcrun simctl create "$DEVICE_NAME" "$DEVICE_ID" "com.apple.CoreSimulator.SimRuntime.iOS-18-4"
          else
            echo "$DEVICE_NAME simulator already exists"
          fi

      - name: Build App
        run: |
          DEVICE="${{ github.event.inputs.device || 'iPhone 16' }}"
          CONFIG="${{ github.event.inputs.configuration || 'Debug' }}"
          
          echo "Building $CONFIG configuration for $DEVICE..."
          
          xcodebuild -project ElementX.xcodeproj \
            -scheme ElementX \
            -destination "platform=iOS Simulator,name=$DEVICE,OS=18.5" \
            -configuration $CONFIG \
            -derivedDataPath ./DerivedData \
            -showBuildTimingSummary \
            build

      - name: Archive App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: ElementX-${{ github.event.inputs.device || 'iPhone-16' }}-${{ github.event.inputs.configuration || 'Debug' }}-OnDemand
          path: DerivedData/Build/Products/*-iphonesimulator/ElementX.app
          retention-days: 7
          if-no-files-found: error

      - name: Build Summary
        run: |
          DEVICE="${{ github.event.inputs.device || 'iPhone 16' }}"
          CONFIG="${{ github.event.inputs.configuration || 'Debug' }}"
          REASON="${{ github.event.inputs.reason || 'Manual trigger' }}"
          APP_PATH="DerivedData/Build/Products/$CONFIG-iphonesimulator/ElementX.app"
          APP_SIZE=$(du -sh "$APP_PATH" | cut -f1)
          
          echo "## On-Demand Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Device:** $DEVICE" >> $GITHUB_STEP_SUMMARY
          echo "- **Configuration:** $CONFIG" >> $GITHUB_STEP_SUMMARY
          echo "- **App Size:** $APP_SIZE" >> $GITHUB_STEP_SUMMARY
          echo "- **Reason:** $REASON" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **✅ Build completed successfully!**" >> $GITHUB_STEP_SUMMARY 