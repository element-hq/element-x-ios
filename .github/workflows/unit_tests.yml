name: Unit Tests

on:
  workflow_dispatch:
  
  push:
    branches: [ develop ]
  
  pull_request:

jobs:
  tests:
    name: Tests
    runs-on: macos-14

    concurrency:
      # Only allow a single run of this workflow on each branch, automatically cancelling older runs.
      group: ${{ format('unit-tests-{0}', github.ref) }}
      cancel-in-progress: true

    steps:
      - uses: nschloe/action-cached-lfs-checkout@v1

      - uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Setup environment
        run:
          source ci_scripts/ci_common.sh && setup_github_actions_environment
      
      - name: SwiftFormat
        run:
          swiftformat --lint .
      
      - name: Run tests
        run: bundle exec fastlane unit_tests
        
      - name: Zip results # for faster upload
        if: failure()
        working-directory: fastlane/test_output
        run: zip -r UnitTests.zip UnitTests.xcresult PreviewTests.xcresult
      
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        # We only care about artefacts if the tests fail
        if: failure()
        with:
            name: Results
            path: fastlane/test_output/UnitTests.zip
            retention-days: 1
            if-no-files-found: ignore
      
      - name: Collect coverage
        run: |
          xcresultparser -q -o cobertura -t ElementX -p $(pwd) fastlane/test_output/UnitTests.xcresult > fastlane/test_output/unit-cobertura.xml
          xcresultparser -q -o cobertura -t ElementX -p $(pwd) fastlane/test_output/PreviewTests.xcresult > fastlane/test_output/preview-cobertura.xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
