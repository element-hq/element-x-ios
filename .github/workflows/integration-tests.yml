name: Integration tests

on:
  schedule:
    - cron:  '0 * * * *'
    
  workflow_dispatch:

jobs:
  integration_tests:
    name: Integration Tests
    runs-on: perf-only

    concurrency:
      # Only allow a single run of this workflow on each branch, automatically cancelling older runs.
      group: integration-tests-${{ github.head_ref }}
      cancel-in-progress: false

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Setup environment
        run:
          source ci_scripts/ci_common.sh && setup_github_actions_environment
      
      - name: Run tests
        run: bundle exec fastlane integration_tests
        env:
          INTEGRATION_TESTS_HOST: ${{ secrets.INTEGRATION_TESTS_HOST }}
          INTEGRATION_TESTS_USERNAME: ${{ secrets.INTEGRATION_TESTS_USERNAME }}
          INTEGRATION_TESTS_PASSWORD: ${{ secrets.INTEGRATION_TESTS_PASSWORD }}
      
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-output
          path: fastlane/test_output
          retention-days: 7
          if-no-files-found: ignore

      - name: Archive raw log file
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: raw.log
          path: ~/Library/Logs/scan/IntegrationTests-IntegrationTests.log
          retention-days: 2
          if-no-files-found: ignore
     
      - name: Checkout gh-pages branch (for perf stats)
        if: always()
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: gh-pages

      - name: Post-process archive to obtain performance metrics and upload to gh-pages
        if: always()
        run: |
          ./Tools/Scripts/parsePerformanceMetrics.sh ~/Library/Logs/scan/IntegrationTests-IntegrationTests.log $GITHUB_SHA | tee perf-results.csv
          cat perf-results.csv >> $GITHUB_WORKSPACE/gh-pages/performance/perf-data.csv
          cd $GITHUB_WORKSPACE/gh-pages/performance/
          git add .
          git commit -m "Results for $GITHUB_SHA"
          git push

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: integrationtests

