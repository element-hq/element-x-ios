name: Build IPA

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
        - release
        - nightly
      build_number:
        description: 'Build number (for nightly builds)'
        required: false
        type: string
  
  push:
    tags: [ 'release/*', 'nightly/*' ]

jobs:
  build-ipa:
    name: Build IPA
    runs-on: macos-15
    
    concurrency:
      group: ${{ format('build-ipa-{0}', github.ref) }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: nschloe/action-cached-lfs-checkout@f46300cd8952454b9f0a21a3d133d4bd5684cfc2 #v1.2.3

      - name: Cache Ruby gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Setup environment
        run: source ci_scripts/ci_common.sh && setup_github_actions_environment

      - name: Install dependencies
        run: bundle install

      - name: Setup code signing
        uses: apple-actions/import-codesigning-certs@v2
        with:
          p12-file-base64: ${{ secrets.P12_BASE64 }}
          p12-password: ${{ secrets.P12_PASSWORD }}

      - name: Setup provisioning profile
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id: ${{ secrets.BUNDLE_ID }}
          profile-type: IOS_APP_STORE
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Generate Xcode project (Production)
        if: startsWith(github.ref, 'refs/tags/release/')
        run: bundle exec fastlane config_production

      - name: Generate Xcode project (Nightly)
        if: startsWith(github.ref, 'refs/tags/nightly/')
        run: |
          build_number="${{ github.event.inputs.build_number || github.run_number }}"
          bundle exec fastlane config_nightly build_number:$build_number

      - name: Build and Archive IPA
        run: |
          # Get version and build number
          VERSION=$(xcodebuild -project ElementX.xcodeproj -showBuildSettings | grep MARKETING_VERSION | awk '{print $3}')
          BUILD_NUMBER=$(xcodebuild -project ElementX.xcodeproj -showBuildSettings | grep CURRENT_PROJECT_VERSION | awk '{print $3}')
          
          echo "Building version $VERSION ($BUILD_NUMBER)"
          
          # Build and archive
          xcodebuild -project ElementX.xcodeproj \
            -scheme ElementX \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath ElementX.xcarchive \
            archive
          
          # Export IPA
          xcodebuild -exportArchive \
            -archivePath ElementX.xcarchive \
            -exportPath ./build \
            -exportOptionsPlist exportOptions.plist

      - name: Create export options plist
        run: |
          cat > exportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>teamID</key>
              <string>${{ secrets.TEAM_ID }}</string>
              <key>signingStyle</key>
              <string>manual</string>
              <key>provisioningProfiles</key>
              <dict>
                  <key>${{ secrets.BUNDLE_ID }}</key>
                  <string>${{ secrets.PROVISIONING_PROFILE_NAME }}</string>
              </dict>
              <key>signingCertificate</key>
              <string>Apple Distribution</string>
              <key>stripSwiftSymbols</key>
              <true/>
              <key>uploadBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
          </dict>
          </plist>
          EOF

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ElementX-IPA
          path: build/ElementX.ipa
          retention-days: 30
          if-no-files-found: error

      - name: Build Summary
        run: |
          VERSION=$(xcodebuild -project ElementX.xcodeproj -showBuildSettings | grep MARKETING_VERSION | awk '{print $3}')
          BUILD_NUMBER=$(xcodebuild -project ElementX.xcodeproj -showBuildSettings | grep CURRENT_PROJECT_VERSION | awk '{print $3}')
          
          echo "## IPA Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** $VERSION" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Number:** $BUILD_NUMBER" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **IPA file created successfully!**" >> $GITHUB_STEP_SUMMARY 