name: Build iOS App

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release
        - nightly
      build_number:
        description: 'Build number (for nightly builds)'
        required: false
        type: string
  
  push:
    branches: [ main, develop ]
    tags: [ 'release/*', 'nightly/*' ]
  
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Build iOS App
    runs-on: macos-15
    
    concurrency:
      group: ${{ format('build-{0}', github.ref) }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: nschloe/action-cached-lfs-checkout@f46300cd8952454b9f0a21a3d133d4bd5684cfc2 #v1.2.3

      - name: Cache Ruby gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Setup environment
        run: source ci_scripts/ci_common.sh && setup_github_actions_environment

      - name: Install dependencies
        run: bundle install

      - name: Generate Xcode project
        run: bundle exec fastlane config_production

      - name: List available simulators
        run: |
          echo "Available simulators:"
          xcrun simctl list devices available | grep iPhone
          echo ""
          echo "Available runtimes:"
          xcrun simctl list runtimes

      - name: Create iPhone 16 Simulator
        run: |
          # Create iPhone 16 simulator if it doesn't exist
          if ! xcrun simctl list devices | grep -q "iPhone 16"; then
            echo "Creating iPhone 16 simulator..."
            xcrun simctl create "iPhone 16" "com.apple.CoreSimulator.SimDeviceType.iPhone-16" "com.apple.CoreSimulator.SimRuntime.iOS-18-4"
          else
            echo "iPhone 16 simulator already exists"
          fi

      - name: Build for iOS Simulator (Debug)
        if: github.event.inputs.build_type == 'debug' || github.event_name == 'pull_request'
        run: |
          echo "Building Debug configuration for iOS Simulator..."
          xcodebuild -project ElementX.xcodeproj \
            -scheme ElementX \
            -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.5' \
            -configuration Debug \
            -derivedDataPath ./DerivedData \
            -showBuildTimingSummary \
            build

      - name: Build for iOS Simulator (Release)
        if: github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/release/')
        run: |
          echo "Building Release configuration for iOS Simulator..."
          xcodebuild -project ElementX.xcodeproj \
            -scheme ElementX \
            -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.5' \
            -configuration Release \
            -derivedDataPath ./DerivedData \
            -showBuildTimingSummary \
            build

      - name: Build Nightly Configuration
        if: github.event.inputs.build_type == 'nightly' || startsWith(github.ref, 'refs/tags/nightly/')
        run: |
          build_number="${{ github.event.inputs.build_number || github.run_number }}"
          echo "Configuring nightly build with build number: $build_number"
          bundle exec fastlane config_nightly build_number:$build_number

      - name: Build Nightly for iOS Simulator
        if: github.event.inputs.build_type == 'nightly' || startsWith(github.ref, 'refs/tags/nightly/')
        run: |
          echo "Building Nightly configuration for iOS Simulator..."
          xcodebuild -project ElementX.xcodeproj \
            -scheme ElementX \
            -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.5' \
            -configuration Release \
            -derivedDataPath ./DerivedData \
            -showBuildTimingSummary \
            build

      - name: Build for iPad Simulator (Optional)
        if: github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/release/')
        run: |
          echo "Building for iPad Simulator..."
          # Create iPad simulator if needed
          if ! xcrun simctl list devices | grep -q "iPad-10th-generation"; then
            xcrun simctl create "iPad-10th-generation" "com.apple.CoreSimulator.SimDeviceType.iPad-10th-generation" "com.apple.CoreSimulator.SimRuntime.iOS-18-4"
          fi
          
          xcodebuild -project ElementX.xcodeproj \
            -scheme ElementX \
            -destination 'platform=iOS Simulator,name=iPad-10th-generation,OS=18.5' \
            -configuration Release \
            -derivedDataPath ./DerivedData \
            build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            ElementX.xcodeproj
            fastlane/test_output/
            DerivedData/Build/Products/Debug-iphonesimulator/
            DerivedData/Build/Products/Release-iphonesimulator/
          retention-days: 7
          if-no-files-found: ignore

      - name: Archive app bundle
        uses: actions/upload-artifact@v4
        with:
          name: ElementX-app
          path: |
            DerivedData/Build/Products/*-iphonesimulator/ElementX.app
          retention-days: 7
          if-no-files-found: ignore

      - name: Build Summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Type:** ${{ github.event.inputs.build_type || 'auto' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build completed successfully!**" >> $GITHUB_STEP_SUMMARY 